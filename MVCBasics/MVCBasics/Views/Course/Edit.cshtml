@model MVCBasics.Models.Course
@{
    ViewData["Title"] = "Create Course";
}

<div class="section">
    <div class="container">
        <div class="row">
            <div class="col-12">

                <h2>@(Model.Id != 0 ? "Edit" : "Create New") Course</h2>

                @using (Html.BeginForm())
                {
                    @Html.ValidationSummary(true)

                    <fieldset>

                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name)
                            @Html.EditorFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Code)
                            @Html.EditorFor(model => model.Code)
                            @Html.ValidationMessageFor(model => model.Code)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Teacher)
                            @inject ICrudService<Teacher> teacherService
                            @{ 
                                var teachers = await teacherService.FindAllAsync();
                            }
                            <select class="form-control" id="@Html.IdFor(model => model.TeacherId)" name="@Html.NameFor(model => model.TeacherId)">
                                @foreach (Teacher teacher in teachers)
                                {
                                    if (teacher.Id == Model.TeacherId)
                                    {
                                        <option value="@teacher.Id" selected="selected">@teacher.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@teacher.Id">@teacher.Name</option>
                                    }
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.TeacherId)
                        </div>

                        <div class="form-actions">
                            <input type="submit" class="btn btn-primary" value="@(Model.Id != 0 ? "Submit" : "Create")" />
                            <a class="btn btn-link" href="@(Model.Id != 0 ? Url.Action("View", new { Model.Id }) : Url.Action("List"))">Cancel</a>
                        </div>

                        <script>$(() => $('input#Name').focus());</script>

                    </fieldset>
                }

            </div>
        </div>
    </div>
</div>
